let express,formidable,requireSignIn,checkHotelOwner,hotels,sellerHotels,removeHotel,singleHotel,updateHotel,userHotelBookings,alreadyBooked,searchingHotels,createHotel,image;_29e‍.w("express",[["default",["express"],function(v){express=v}]]);_29e‍.w("express-formidable",[["default",["formidable"],function(v){formidable=v}]]);_29e‍.w("../middlewares/index",[["requireSignIn",["requireSignIn"],function(v){requireSignIn=v}],["checkHotelOwner",["checkHotelOwner"],function(v){checkHotelOwner=v}]]);_29e‍.w("../controllers/hotel",[["hotels",["hotels"],function(v){hotels=v}],["sellerHotels",["sellerHotels"],function(v){sellerHotels=v}],["removeHotel",["removeHotel"],function(v){removeHotel=v}],["singleHotel",["singleHotel"],function(v){singleHotel=v}],["updateHotel",["updateHotel"],function(v){updateHotel=v}],["userHotelBookings",["userHotelBookings"],function(v){userHotelBookings=v}],["alreadyBooked",["alreadyBooked"],function(v){alreadyBooked=v}],["searchingHotels",["searchingHotels"],function(v){searchingHotels=v}],["createHotel",["createHotel"],function(v){createHotel=v}],["image",["image"],function(v){image=v}]]);






const router = express.Router();

router.post('/create-hotel', requireSignIn, formidable(), createHotel);
router.get('/hotels', hotels);
router.get('/hotel/image/:hotelId', image);
router.get('/seller-hotels', requireSignIn, sellerHotels);
router.delete('/delete-hotel/:hotelId', requireSignIn, checkHotelOwner, removeHotel);
router.get('/hotel/:hotelId', singleHotel);
router.put('/hotel/update-hotel/:hotelId', requireSignIn, checkHotelOwner, formidable(), updateHotel);
router.get('/user-hotel-bookings', requireSignIn, userHotelBookings);
router.get('/already-booked/:hotelId', requireSignIn, alreadyBooked);
router.post('/search-hotel', searchingHotels);

module.exports = router;